<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<xunit lang='mcpp' comment='//' ext='.cpp' optext='.mcpp' filenaming='uppercase' naming='snake'>
  <version>
for NUnit V2.0(Managed C++)
  </version>
  <reference>
Assertion::Fail([string message])

Assertion::Assert([string message,] bool condition)

Assertion::AssertEquals([string message,] expected, actual)
  (comparable type: double, float, int, string)
Assertion::AssertEquals(string message, expected, actual)
Assertion.AssertNotEquals(string message, Object expected, Object actual)

Assertion::AssertNotNull([string message,] Object anObject)
Assertion::AssertNull([string message,] Object anObject)

Assertion::AssertSame([string message,] Object expected, Object actual)
Assertion::AssertNotSame(string message, Object expected, Object actual)
  </reference>
  <skeleton>
#using &lt;nunit.framework.dll&gt;
#using &lt;mscorlib.dll&gt;
using namespace NUnit::Framework;
using namespace NUnit::Core;
<include template='#include "$(file);"'/>

<class template='[TestFixture] public __gc class $(skeleton) {'/>
<usercode>
  //your stuff...
 public:
  [SetUp] void setup() {
    // initialize
  }
  [TearDown] void teardown() {
    // terminate
  }
</usercode>
<method template='  [Test] void $(methodname)() {'>
    Assertion::Fail(&quot;not implement yet&quot;);
  }
</method>
<suite prefix='on'>
</suite>
<suite prefix='off'>
</suite>
};
  </skeleton>
  <main>
  </main>
</xunit>

